name: Run Gradle on PRs
on: [pull_request, push]

jobs:
  gradle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Java
      uses: actions/setup-java@v3
      id: setup-java
      with:
        distribution: 'temurin'
        java-version: '11'
        java-package: 'jdk'
        architecture: 'x64'
        check-latest: true

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      id: setup-gradle
      with: 
        gradle-version: wrapper
        cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/release' }}
        gradle-home-cache-cleanup: true

    # - name: Validate gradle wrapper
    #   uses: gradle/wrapper-validation-action@v1

    # - name: Run chmod to make gradlew executable
    #   run: chmod +x ./gradlew
      
    - name: Test build configuration
      run:  gradle build --dry-run # just test build configuration

    - name: Gradle and Java version
      run: echo "Gradle version was ${{steps.setup-gradle.outputs.gradle-version}}\nJava version was ${{steps.setup-java.outputs.java-version}}"

    - name Find gradlew
      run: echo "$(find gradlew)"
    
    - name: Execute Gradle build
      id: gradle
      run: gradle buildEnvironment
      
    - name: "Add Build Scan URL as PR comment"
      uses: actions/github-script@v5
      if: github.event_name == 'pull_request' && failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '‚ùå ${{ github.workflow }} failed: ${{ steps.gradle.outputs.build-scan-url }}'
          })
          
    - name: Upload build reports
      uses: actions/upload-artifact@v3
      with:
        name: build-reports
        path: build/reports/



    



